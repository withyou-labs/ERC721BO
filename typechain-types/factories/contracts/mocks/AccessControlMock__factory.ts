/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AccessControlMock,
  AccessControlMockInterface,
} from "../../../contracts/mocks/AccessControlMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwnerNorApprovedForAll",
    type: "error",
  },
  {
    inputs: [],
    name: "ExceededMaxOfMint",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexOutOfRange",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenAlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurnt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806011815260200170416363657373436f6e74726f6c4d6f636b60781b8152506040518060400160405280600381526020016241434d60e81b815250816000908162000069919062000144565b50600162000078828262000144565b506200009060026200009860201b62000b181760201c565b505062000210565b6000199055565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ca57607f821691505b602082108103620000eb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200013f57600081815260208120601f850160051c810160208610156200011a5750805b601f850160051c820191505b818110156200013b5782815560010162000126565b5050505b505050565b81516001600160401b038111156200016057620001606200009f565b6200017881620001718454620000b5565b84620000f1565b602080601f831160018114620001b05760008415620001975750858301515b600019600386901b1c1916600185901b1785556200013b565b600085815260208120601f198616915b82811015620001e157888601518255948401946001909101908401620001c0565b5085821015620002005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61282c80620002206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c80636352211e116100e3578063a22cb4651161008c578063c87b56dd11610066578063c87b56dd14610384578063d547741f14610397578063e985e9c5146103aa57600080fd5b8063a22cb46514610356578063a2309ff814610369578063b88d4fde1461037157600080fd5b806395d89b41116100bd57806395d89b411461033e578063966ff65014610346578063a217fddf1461034e57600080fd5b80636352211e146102d257806370a08231146102e557806391d14854146102f857600080fd5b8063248a9ca31161014557806336568abe1161011f57806336568abe1461029957806342842e0e146102ac5780634f6ccce7146102bf57600080fd5b8063248a9ca3146102505780632f2ff15d146102735780632f745c591461028657600080fd5b8063095ea7b311610176578063095ea7b31461021257806318160ddd1461022757806323b872dd1461023d57600080fd5b806301ffc9a71461019d57806306fdde03146101c5578063081812fc146101da575b600080fd5b6101b06101ab3660046122c1565b6103f3565b60405190151581526020015b60405180910390f35b6101cd610404565b6040516101bc919061234c565b6101ed6101e836600461235f565b610496565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101bc565b6102256102203660046123a1565b610500565b005b61022f6105e6565b6040519081526020016101bc565b61022561024b3660046123cb565b610607565b61022f61025e36600461235f565b60009081526007602052604090206001015490565b610225610281366004612407565b610652565b61022f6102943660046123a1565b610677565b6102256102a7366004612407565b610728565b6102256102ba3660046123cb565b6107e0565b61022f6102cd36600461235f565b6107fb565b6101ed6102e036600461235f565b6108c7565b61022f6102f3366004612433565b61096a565b6101b0610306366004612407565b600091825260076020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101cd6109c5565b61022f6109d4565b61022f600081565b61022561036436600461244e565b6109e0565b61022f6109eb565b61022561037f3660046124b9565b6109f7565b6101cd61039236600461235f565b610a49565b6102256103a5366004612407565b610af3565b6101b06103b83660046125b3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006103fe82610b1f565b92915050565b606060008054610413906125dd565b80601f016020809104026020016040519081016040528092919081815260200182805461043f906125dd565b801561048c5780601f106104615761010080835404028352916020019161048c565b820191906000526020600020905b81548152906001019060200180831161046f57829003601f168201915b5050505050905090565b60006104a182610b75565b6104d7576040517fb1d04f0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081526005602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061050b826108c7565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610572576040517f4fe05af100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff82161480159061059f575061059d81336103b8565b155b156105d6576040517fd585559200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e1818484610b9e565b505050565b60006105f06109d4565b6105f86109eb565b610602919061265f565b905090565b6106113382610c1f565b610647576040517f4fe05af100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e1838383610cf6565b60008281526007602052604090206001015461066d81610e0b565b6105e18383610e18565b60008060086106866002610f0c565b901c90506000805b600061069c60048884610f29565b9050806000036106af57506001016106ee565b60006106ba82610f4f565b90508681850111156106e457600883901b6106d783868a0361118b565b01955050505050506103fe565b9290920191506001015b8281111561068e576040517f1390f2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811633146107d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6107dc82826114f6565b5050565b6105e1838383604051806020016040528060008152506109f7565b6000806108086002610f0c565b9050600881901c6000806000195b60006108256004600186610f29565b1990508060000361083c578360010193505061087b565b600061084782610f4f565b905088818501111561086e57600885901b61086483868c0361118b565b0192505050610884565b6001909401939290920191505b83831115610816575b8481106108bd576040517f1390f2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9695505050505050565b6000816108d46002610f0c565b1161090b576040517fb1d04f0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006109186003846115b1565b9050600173ffffffffffffffffffffffffffffffffffffffff8216116103fe576040517fb1d04f0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600173ffffffffffffffffffffffffffffffffffffffff8316116109bc576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fe8261161b565b606060018054610413906125dd565b6000610602600161161b565b6107dc33838361165d565b60006106026002610f0c565b610a013383610c1f565b610a37576040517f4fe05af100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a438484848461175a565b50505050565b6060610a5482610b75565b610a8a576040517fb1d04f0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610aa160408051602081019091526000815290565b90506000815111610ac15760405180602001604052806000815250610aec565b80610acb846117a7565b604051602001610adc929190612672565b6040516020818303038152906040525b9392505050565b600082815260076020526040902060010154610b0e81610e0b565b6105e183836114f6565b6000199055565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806103fe57506103fe82611847565b600081610b826002610f0c565b1180156103fe5750610b976004600184611977565b1592915050565b60008181526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610c2a82610b75565b610c60576040517fb1d04f0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c6c60048484611977565b15610c79575060016103fe565b6000610c84836108c7565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526006602090815260408083209389168352929052205490915060ff1680610cee575060008381526005602052604090205473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b610d0260048483611977565b610d38576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600173ffffffffffffffffffffffffffffffffffffffff831611610d88576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d9283826119ae565b610d9f6004848484611a28565b610dab60038284611a3e565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b610e158133611b0a565b50565b600082815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166107dc57600082815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610eae3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b80546000906000198114610f205780610aec565b60009392505050565b60008381610f378486611bc4565b81526020019081526020016000205490509392505050565b600081600003610f6157506000919050565b7f55555555555555555555555555555555555555555555555555555555555555558260011c167f555555555555555555555555555555555555555555555555555555555555555583160191507f33333333333333333333333333333333333333333333333333333333333333338260021c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8260041c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8260081c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8260101c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8260201c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff8260401c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff8260801c166fffffffffffffffffffffffffffffffff8316019150819050919050565b600060ff8211156111f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f426974733a20696e646578206f7574206f6620626f756e64730000000000000060448201526064016107c9565b8260000361120957506000196103fe565b60009050600182019150827f55555555555555555555555555555555555555555555555555555555555555558160011c167f55555555555555555555555555555555555555555555555555555555555555558216017f33333333333333333333333333333333333333333333333333333333333333338160021c167f33333333333333333333333333333333333333333333333333333333333333338216017f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8160041c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8216017eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8160081c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216017dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8160101c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216017bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8160201c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff82160177ffffffffffffffff0000000000000000ffffffffffffffff8160401c1677ffffffffffffffff0000000000000000ffffffffffffffff8216016fffffffffffffffffffffffffffffffff81169050808a111561142557608089019850808a0399505b5080881c67ffffffffffffffff16808a111561144757604089019850808a0399505b5081881c63ffffffff16808a111561146557602089019850808a0399505b5082881c61ffff16808a111561148157601089019850808a0399505b5083881c60ff16808a111561149c57600889019850808a0399505b5084881c600f16808a11156114b757600489019850808a0399505b5085881c600316808a11156114d257600289019850808a0399505b5086881c600116808a11156114e8576001890198505b505050505050505092915050565b600082815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156107dc57600082815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000815b600081815260208581526040909120549081901c9063ffffffff1673ffffffffffffffffffffffffffffffffffffffff8216158015906115f6575084818401115b15611605575091506103fe9050565b50506000198101906115b5575060009392505050565b600080600861162a6002610f0c565b901c90506000805b61164661164160048784610f29565b610f4f565b909101906001018281111561163257509392505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116c2576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83811660008181526006602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611765848484610cf6565b61177184848484611c88565b610a43576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606060006117b483611e25565b600101905060008167ffffffffffffffff8111156117d4576117d461248a565b6040519080825280601f01601f1916602001820160405280156117fe576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461180857509392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a70000000000000000000000000000000000000000000000000000000014806118da57507fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000145b8061192657507fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d6300000000000000000000000000000000000000000000000000000000145b806103fe57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f000000000000000000000000000000000000000000000000000000001492915050565b600080611988600884901c85611bc4565b600090815260208690526040902054600160ff85169190911c8116149150509392505050565b60008181526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182919073ffffffffffffffffffffffffffffffffffffffff8516907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925908390a45050565b611a33848483611f07565b610a43848383611f3f565b600082815260208481526040909120549081901c9063ffffffff16611a64836001611f76565b60008581526020879052604090205573ffffffffffffffffffffffffffffffffffffffff82161580611a97575060018111155b15611aa3575050505050565b6000611ab08560016126a1565b600081815260208881526040909120549192501c73ffffffffffffffffffffffffffffffffffffffff16611b0257611af283611aed60018561265f565b611f76565b6000828152602088905260409020555b505050505050565b600082815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166107dc57611b4a81612031565b611b55836020612050565b604051602001611b669291906126b4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526107c99160040161234c565b600063ffffffff831115611c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f455243373231424f204173736574733a20706167654e6f206d7573742062652060448201527f6c657373207468616e20325e333200000000000000000000000000000000000060648201526084016107c9565b5077ffffffffffffffffffffffffffffffffffffffff00000000602082901b1663ffffffff83161792915050565b600073ffffffffffffffffffffffffffffffffffffffff84163b15611e1a576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290611cff903390899088908890600401612735565b6020604051808303816000875af1925050508015611d58575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611d5591810190612774565b60015b611dcf573d808015611d86576040519150601f19603f3d011682016040523d82523d6000602084013e611d8b565b606091505b508051600003611dc7576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610cee565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611e6e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611e9a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611eb857662386f26fc10000830492506010015b6305f5e1008310611ed0576305f5e100830492506008015b6127108310611ee457612710830492506004015b60648310611ef6576064830492506002015b600a83106103fe5760010192915050565b6000611f17600883901c84611bc4565b60009081526020949094525060409092208054600160ff9094169390931b1990921690915550565b6000611f4f600883901c84611bc4565b60009081526020949094525060409092208054600160ff9094169390931b90921790915550565b600063ffffffff82111561200c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243373231424f204f776e6572733a20636f756e74206d757374206265206c60448201527f657373207468616e20325e33320000000000000000000000000000000000000060648201526084016107c9565b5060209190911b77ffffffffffffffffffffffffffffffffffffffff00000000161790565b60606103fe73ffffffffffffffffffffffffffffffffffffffff831660145b6060600061205f836002612791565b61206a9060026126a1565b67ffffffffffffffff8111156120825761208261248a565b6040519080825280601f01601f1916602001820160405280156120ac576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106120e3576120e36127b0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612146576121466127b0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000612182846002612791565b61218d9060016126a1565b90505b600181111561222a577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106121ce576121ce6127b0565b1a60f81b8282815181106121e4576121e46127b0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93612223816127df565b9050612190565b508315610aec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107c9565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610e1557600080fd5b6000602082840312156122d357600080fd5b8135610aec81612293565b60005b838110156122f95781810151838201526020016122e1565b50506000910152565b6000815180845261231a8160208601602086016122de565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610aec6020830184612302565b60006020828403121561237157600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461239c57600080fd5b919050565b600080604083850312156123b457600080fd5b6123bd83612378565b946020939093013593505050565b6000806000606084860312156123e057600080fd5b6123e984612378565b92506123f760208501612378565b9150604084013590509250925092565b6000806040838503121561241a57600080fd5b8235915061242a60208401612378565b90509250929050565b60006020828403121561244557600080fd5b610aec82612378565b6000806040838503121561246157600080fd5b61246a83612378565b91506020830135801515811461247f57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156124cf57600080fd5b6124d885612378565b93506124e660208601612378565b925060408501359150606085013567ffffffffffffffff8082111561250a57600080fd5b818701915087601f83011261251e57600080fd5b8135818111156125305761253061248a565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156125765761257661248a565b816040528281528a602084870101111561258f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156125c657600080fd5b6125cf83612378565b915061242a60208401612378565b600181811c908216806125f157607f821691505b60208210810361262a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156103fe576103fe612630565b600083516126848184602088016122de565b8351908301906126988183602088016122de565b01949350505050565b808201808211156103fe576103fe612630565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516126ec8160178501602088016122de565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516127298160288401602088016122de565b01602801949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526108bd6080830184612302565b60006020828403121561278657600080fd5b8151610aec81612293565b60008160001904831182151516156127ab576127ab612630565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816127ee576127ee612630565b50600019019056fea2646970667358221220ae65a4e59f108e15a2ee9eb0155f1d9f69d5cf6c697c7e852bcb5bd8184d2a7164736f6c63430008100033";

type AccessControlMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlMock__factory extends ContractFactory {
  constructor(...args: AccessControlMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessControlMock> {
    return super.deploy(overrides || {}) as Promise<AccessControlMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlMock {
    return super.attach(address) as AccessControlMock;
  }
  override connect(signer: Signer): AccessControlMock__factory {
    return super.connect(signer) as AccessControlMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlMockInterface {
    return new utils.Interface(_abi) as AccessControlMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlMock {
    return new Contract(address, _abi, signerOrProvider) as AccessControlMock;
  }
}
