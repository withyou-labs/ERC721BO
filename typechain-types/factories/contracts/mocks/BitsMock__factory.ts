/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BitsMock,
  BitsMockInterface,
} from "../../../contracts/mocks/BitsMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n",
        type: "uint256",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "popCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063058440b51461003b57806306dd848514610060575b600080fd5b61004e610049366004610660565b610073565b60405190815260200160405180910390f35b61004e61006e366004610679565b610084565b600061007e82610097565b92915050565b600061009083836102d3565b9392505050565b6000816000036100a957506000919050565b7f55555555555555555555555555555555555555555555555555555555555555558260011c167f555555555555555555555555555555555555555555555555555555555555555583160191507f33333333333333333333333333333333333333333333333333333333333333338260021c167f333333333333333333333333333333333333333333333333333333333333333383160191507f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8260041c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f83160191507eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8260081c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff83160191507dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8260101c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff83160191507bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8260201c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff831601915077ffffffffffffffff0000000000000000ffffffffffffffff8260401c1677ffffffffffffffff0000000000000000ffffffffffffffff83160191506fffffffffffffffffffffffffffffffff8260801c166fffffffffffffffffffffffffffffffff8316019150819050919050565b600060ff821115610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f426974733a20696e646578206f7574206f6620626f756e647300000000000000604482015260640160405180910390fd5b8260000361037357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61007e565b60009050600182019150827f55555555555555555555555555555555555555555555555555555555555555558160011c167f55555555555555555555555555555555555555555555555555555555555555558216017f33333333333333333333333333333333333333333333333333333333333333338160021c167f33333333333333333333333333333333333333333333333333333333333333338216017f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8160041c167f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f8216017eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8160081c167eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216017dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8160101c167dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216017bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8160201c167bffffffff00000000ffffffff00000000ffffffff00000000ffffffff82160177ffffffffffffffff0000000000000000ffffffffffffffff8160401c1677ffffffffffffffff0000000000000000ffffffffffffffff8216016fffffffffffffffffffffffffffffffff81169050808a111561058f57608089019850808a0399505b5080881c67ffffffffffffffff16808a11156105b157604089019850808a0399505b5081881c63ffffffff16808a11156105cf57602089019850808a0399505b5082881c61ffff16808a11156105eb57601089019850808a0399505b5083881c60ff16808a111561060657600889019850808a0399505b5084881c600f16808a111561062157600489019850808a0399505b5085881c600316808a111561063c57600289019850808a0399505b5086881c600116808a1115610652576001890198505b505050505050505092915050565b60006020828403121561067257600080fd5b5035919050565b6000806040838503121561068c57600080fd5b5050803592602090910135915056fea264697066735822122044dab140dc3dca818f88c8cc46aab136592cc91e6c2892e608d24bab668638e764736f6c63430008100033";

type BitsMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitsMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitsMock__factory extends ContractFactory {
  constructor(...args: BitsMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BitsMock> {
    return super.deploy(overrides || {}) as Promise<BitsMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BitsMock {
    return super.attach(address) as BitsMock;
  }
  override connect(signer: Signer): BitsMock__factory {
    return super.connect(signer) as BitsMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitsMockInterface {
    return new utils.Interface(_abi) as BitsMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitsMock {
    return new Contract(address, _abi, signerOrProvider) as BitsMock;
  }
}
