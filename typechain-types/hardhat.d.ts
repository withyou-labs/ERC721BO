/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC721BO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BO__factory>;
    getContractFactory(
      name: "ERC721BONonburnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BONonburnable__factory>;
    getContractFactory(
      name: "IERC721BO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721BO__factory>;
    getContractFactory(
      name: "AssetsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetsMock__factory>;
    getContractFactory(
      name: "BitsMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BitsMock__factory>;
    getContractFactory(
      name: "CounterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CounterMock__factory>;
    getContractFactory(
      name: "ERC721BOMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BOMock__factory>;
    getContractFactory(
      name: "ERC721BONonburnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BONonburnableMock__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "OwnersMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnersMock__factory>;

    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ERC721BO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BO>;
    getContractAt(
      name: "ERC721BONonburnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BONonburnable>;
    getContractAt(
      name: "IERC721BO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721BO>;
    getContractAt(
      name: "AssetsMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetsMock>;
    getContractAt(
      name: "BitsMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BitsMock>;
    getContractAt(
      name: "CounterMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CounterMock>;
    getContractAt(
      name: "ERC721BOMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BOMock>;
    getContractAt(
      name: "ERC721BONonburnableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BONonburnableMock>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "OwnersMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnersMock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
